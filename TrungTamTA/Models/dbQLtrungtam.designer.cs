#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrungTamTA.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TrungTamTA")]
	public partial class dbQLtrungtamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCacNgayTrongTuan(CacNgayTrongTuan instance);
    partial void UpdateCacNgayTrongTuan(CacNgayTrongTuan instance);
    partial void DeleteCacNgayTrongTuan(CacNgayTrongTuan instance);
    partial void InsertChiTietLichHoc(ChiTietLichHoc instance);
    partial void UpdateChiTietLichHoc(ChiTietLichHoc instance);
    partial void DeleteChiTietLichHoc(ChiTietLichHoc instance);
    partial void InsertChiTietLopHoc(ChiTietLopHoc instance);
    partial void UpdateChiTietLopHoc(ChiTietLopHoc instance);
    partial void DeleteChiTietLopHoc(ChiTietLopHoc instance);
    partial void InsertChuongTrinhHoc(ChuongTrinhHoc instance);
    partial void UpdateChuongTrinhHoc(ChuongTrinhHoc instance);
    partial void DeleteChuongTrinhHoc(ChuongTrinhHoc instance);
    partial void InsertDangKyHoc(DangKyHoc instance);
    partial void UpdateDangKyHoc(DangKyHoc instance);
    partial void DeleteDangKyHoc(DangKyHoc instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertHocVien(HocVien instance);
    partial void UpdateHocVien(HocVien instance);
    partial void DeleteHocVien(HocVien instance);
    partial void InsertLichHoc(LichHoc instance);
    partial void UpdateLichHoc(LichHoc instance);
    partial void DeleteLichHoc(LichHoc instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTrangThaiHV(TrangThaiHV instance);
    partial void UpdateTrangThaiHV(TrangThaiHV instance);
    partial void DeleteTrangThaiHV(TrangThaiHV instance);
    #endregion
		
		public dbQLtrungtamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLtrungtamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLtrungtamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
        public dbQLtrungtamDataContext() :
             base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TrungTamTAConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public dbQLtrungtamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CacNgayTrongTuan> CacNgayTrongTuans
		{
			get
			{
				return this.GetTable<CacNgayTrongTuan>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietLichHoc> ChiTietLichHocs
		{
			get
			{
				return this.GetTable<ChiTietLichHoc>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietLopHoc> ChiTietLopHocs
		{
			get
			{
				return this.GetTable<ChiTietLopHoc>();
			}
		}
		
		public System.Data.Linq.Table<ChuongTrinhHoc> ChuongTrinhHocs
		{
			get
			{
				return this.GetTable<ChuongTrinhHoc>();
			}
		}
		
		public System.Data.Linq.Table<DangKyHoc> DangKyHocs
		{
			get
			{
				return this.GetTable<DangKyHoc>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<HocVien> HocViens
		{
			get
			{
				return this.GetTable<HocVien>();
			}
		}
		
		public System.Data.Linq.Table<LichHoc> LichHocs
		{
			get
			{
				return this.GetTable<LichHoc>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TrangThaiHV> TrangThaiHVs
		{
			get
			{
				return this.GetTable<TrangThaiHV>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CacNgayTrongTuan")]
	public partial class CacNgayTrongTuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDNgay;
		
		private string _TenNgay;
		
		private EntitySet<LichHoc> _LichHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNgayChanging(int value);
    partial void OnIDNgayChanged();
    partial void OnTenNgayChanging(string value);
    partial void OnTenNgayChanged();
    #endregion
		
		public CacNgayTrongTuan()
		{
			this._LichHocs = new EntitySet<LichHoc>(new Action<LichHoc>(this.attach_LichHocs), new Action<LichHoc>(this.detach_LichHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNgay", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDNgay
		{
			get
			{
				return this._IDNgay;
			}
			set
			{
				if ((this._IDNgay != value))
				{
					this.OnIDNgayChanging(value);
					this.SendPropertyChanging();
					this._IDNgay = value;
					this.SendPropertyChanged("IDNgay");
					this.OnIDNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNgay", DbType="NVarChar(50)")]
		public string TenNgay
		{
			get
			{
				return this._TenNgay;
			}
			set
			{
				if ((this._TenNgay != value))
				{
					this.OnTenNgayChanging(value);
					this.SendPropertyChanging();
					this._TenNgay = value;
					this.SendPropertyChanged("TenNgay");
					this.OnTenNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CacNgayTrongTuan_LichHoc", Storage="_LichHocs", ThisKey="IDNgay", OtherKey="IDNgay")]
		public EntitySet<LichHoc> LichHocs
		{
			get
			{
				return this._LichHocs;
			}
			set
			{
				this._LichHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LichHocs(LichHoc entity)
		{
			this.SendPropertyChanging();
			entity.CacNgayTrongTuan = this;
		}
		
		private void detach_LichHocs(LichHoc entity)
		{
			this.SendPropertyChanging();
			entity.CacNgayTrongTuan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietLichHoc")]
	public partial class ChiTietLichHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLophoc;
		
		private int _IDLichhoc;
		
		private EntityRef<LichHoc> _LichHoc;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLophocChanging(int value);
    partial void OnIDLophocChanged();
    partial void OnIDLichhocChanging(int value);
    partial void OnIDLichhocChanged();
    #endregion
		
		public ChiTietLichHoc()
		{
			this._LichHoc = default(EntityRef<LichHoc>);
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLophoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLophoc
		{
			get
			{
				return this._IDLophoc;
			}
			set
			{
				if ((this._IDLophoc != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLophocChanging(value);
					this.SendPropertyChanging();
					this._IDLophoc = value;
					this.SendPropertyChanged("IDLophoc");
					this.OnIDLophocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLichhoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLichhoc
		{
			get
			{
				return this._IDLichhoc;
			}
			set
			{
				if ((this._IDLichhoc != value))
				{
					if (this._LichHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLichhocChanging(value);
					this.SendPropertyChanging();
					this._IDLichhoc = value;
					this.SendPropertyChanged("IDLichhoc");
					this.OnIDLichhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichHoc_ChiTietLichHoc", Storage="_LichHoc", ThisKey="IDLichhoc", OtherKey="IDLichhoc", IsForeignKey=true)]
		public LichHoc LichHoc
		{
			get
			{
				return this._LichHoc.Entity;
			}
			set
			{
				LichHoc previousValue = this._LichHoc.Entity;
				if (((previousValue != value) 
							|| (this._LichHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LichHoc.Entity = null;
						previousValue.ChiTietLichHocs.Remove(this);
					}
					this._LichHoc.Entity = value;
					if ((value != null))
					{
						value.ChiTietLichHocs.Add(this);
						this._IDLichhoc = value.IDLichhoc;
					}
					else
					{
						this._IDLichhoc = default(int);
					}
					this.SendPropertyChanged("LichHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_ChiTietLichHoc", Storage="_LopHoc", ThisKey="IDLophoc", OtherKey="IDLophoc", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.ChiTietLichHocs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.ChiTietLichHocs.Add(this);
						this._IDLophoc = value.IDLophoc;
					}
					else
					{
						this._IDLophoc = default(int);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietLopHoc")]
	public partial class ChiTietLopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCTLophoc;
		
		private System.Nullable<int> _IDLophoc;
		
		private System.Nullable<int> _IDHocVien;
		
		private System.Nullable<bool> _DaThanhToan;
		
		private System.Nullable<double> _DiemNghe;
		
		private System.Nullable<double> _DiemNoi;
		
		private System.Nullable<double> _DiemViet;
		
		private System.Nullable<double> _DiemDoc;
		
		private System.Nullable<double> _DiemTB;
		
		private EntityRef<HocVien> _HocVien;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCTLophocChanging(int value);
    partial void OnIDCTLophocChanged();
    partial void OnIDLophocChanging(System.Nullable<int> value);
    partial void OnIDLophocChanged();
    partial void OnIDHocVienChanging(System.Nullable<int> value);
    partial void OnIDHocVienChanged();
    partial void OnDaThanhToanChanging(System.Nullable<bool> value);
    partial void OnDaThanhToanChanged();
    partial void OnDiemNgheChanging(System.Nullable<double> value);
    partial void OnDiemNgheChanged();
    partial void OnDiemNoiChanging(System.Nullable<double> value);
    partial void OnDiemNoiChanged();
    partial void OnDiemVietChanging(System.Nullable<double> value);
    partial void OnDiemVietChanged();
    partial void OnDiemDocChanging(System.Nullable<double> value);
    partial void OnDiemDocChanged();
    partial void OnDiemTBChanging(System.Nullable<double> value);
    partial void OnDiemTBChanged();
    #endregion
		
		public ChiTietLopHoc()
		{
			this._HocVien = default(EntityRef<HocVien>);
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCTLophoc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCTLophoc
		{
			get
			{
				return this._IDCTLophoc;
			}
			set
			{
				if ((this._IDCTLophoc != value))
				{
					this.OnIDCTLophocChanging(value);
					this.SendPropertyChanging();
					this._IDCTLophoc = value;
					this.SendPropertyChanged("IDCTLophoc");
					this.OnIDCTLophocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLophoc", DbType="Int")]
		public System.Nullable<int> IDLophoc
		{
			get
			{
				return this._IDLophoc;
			}
			set
			{
				if ((this._IDLophoc != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLophocChanging(value);
					this.SendPropertyChanging();
					this._IDLophoc = value;
					this.SendPropertyChanged("IDLophoc");
					this.OnIDLophocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHocVien", DbType="Int")]
		public System.Nullable<int> IDHocVien
		{
			get
			{
				return this._IDHocVien;
			}
			set
			{
				if ((this._IDHocVien != value))
				{
					if (this._HocVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHocVienChanging(value);
					this.SendPropertyChanging();
					this._IDHocVien = value;
					this.SendPropertyChanged("IDHocVien");
					this.OnIDHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaThanhToan", DbType="Bit")]
		public System.Nullable<bool> DaThanhToan
		{
			get
			{
				return this._DaThanhToan;
			}
			set
			{
				if ((this._DaThanhToan != value))
				{
					this.OnDaThanhToanChanging(value);
					this.SendPropertyChanging();
					this._DaThanhToan = value;
					this.SendPropertyChanged("DaThanhToan");
					this.OnDaThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemNghe", DbType="Float")]
		public System.Nullable<double> DiemNghe
		{
			get
			{
				return this._DiemNghe;
			}
			set
			{
				if ((this._DiemNghe != value))
				{
					this.OnDiemNgheChanging(value);
					this.SendPropertyChanging();
					this._DiemNghe = value;
					this.SendPropertyChanged("DiemNghe");
					this.OnDiemNgheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemNoi", DbType="Float")]
		public System.Nullable<double> DiemNoi
		{
			get
			{
				return this._DiemNoi;
			}
			set
			{
				if ((this._DiemNoi != value))
				{
					this.OnDiemNoiChanging(value);
					this.SendPropertyChanging();
					this._DiemNoi = value;
					this.SendPropertyChanged("DiemNoi");
					this.OnDiemNoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemViet", DbType="Float")]
		public System.Nullable<double> DiemViet
		{
			get
			{
				return this._DiemViet;
			}
			set
			{
				if ((this._DiemViet != value))
				{
					this.OnDiemVietChanging(value);
					this.SendPropertyChanging();
					this._DiemViet = value;
					this.SendPropertyChanged("DiemViet");
					this.OnDiemVietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemDoc", DbType="Float")]
		public System.Nullable<double> DiemDoc
		{
			get
			{
				return this._DiemDoc;
			}
			set
			{
				if ((this._DiemDoc != value))
				{
					this.OnDiemDocChanging(value);
					this.SendPropertyChanging();
					this._DiemDoc = value;
					this.SendPropertyChanged("DiemDoc");
					this.OnDiemDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTB", AutoSync=AutoSync.Always, DbType="Float", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DiemTB
		{
			get
			{
				return this._DiemTB;
			}
			set
			{
				if ((this._DiemTB != value))
				{
					this.OnDiemTBChanging(value);
					this.SendPropertyChanging();
					this._DiemTB = value;
					this.SendPropertyChanged("DiemTB");
					this.OnDiemTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocVien_ChiTietLopHoc", Storage="_HocVien", ThisKey="IDHocVien", OtherKey="IDHocvien", IsForeignKey=true)]
		public HocVien HocVien
		{
			get
			{
				return this._HocVien.Entity;
			}
			set
			{
				HocVien previousValue = this._HocVien.Entity;
				if (((previousValue != value) 
							|| (this._HocVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocVien.Entity = null;
						previousValue.ChiTietLopHocs.Remove(this);
					}
					this._HocVien.Entity = value;
					if ((value != null))
					{
						value.ChiTietLopHocs.Add(this);
						this._IDHocVien = value.IDHocvien;
					}
					else
					{
						this._IDHocVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("HocVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_ChiTietLopHoc", Storage="_LopHoc", ThisKey="IDLophoc", OtherKey="IDLophoc", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.ChiTietLopHocs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.ChiTietLopHocs.Add(this);
						this._IDLophoc = value.IDLophoc;
					}
					else
					{
						this._IDLophoc = default(Nullable<int>);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuongTrinhHoc")]
	public partial class ChuongTrinhHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDChuongTrinh;
		
		private string _TenChuongTrinh;
		
		private string _SoBuoiHoc;
		
		private string _ThoiLuong;
		
		private System.Nullable<double> _GiaTien;
		
		private string _MoTa;
		
		private EntitySet<DangKyHoc> _DangKyHocs;
		
		private EntitySet<LopHoc> _LopHocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChuongTrinhChanging(int value);
    partial void OnIDChuongTrinhChanged();
    partial void OnTenChuongTrinhChanging(string value);
    partial void OnTenChuongTrinhChanged();
    partial void OnSoBuoiHocChanging(string value);
    partial void OnSoBuoiHocChanged();
    partial void OnThoiLuongChanging(string value);
    partial void OnThoiLuongChanged();
    partial void OnGiaTienChanging(System.Nullable<double> value);
    partial void OnGiaTienChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
		
		public ChuongTrinhHoc()
		{
			this._DangKyHocs = new EntitySet<DangKyHoc>(new Action<DangKyHoc>(this.attach_DangKyHocs), new Action<DangKyHoc>(this.detach_DangKyHocs));
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuongTrinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDChuongTrinh
		{
			get
			{
				return this._IDChuongTrinh;
			}
			set
			{
				if ((this._IDChuongTrinh != value))
				{
					this.OnIDChuongTrinhChanging(value);
					this.SendPropertyChanging();
					this._IDChuongTrinh = value;
					this.SendPropertyChanged("IDChuongTrinh");
					this.OnIDChuongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuongTrinh", DbType="NVarChar(50)")]
		public string TenChuongTrinh
		{
			get
			{
				return this._TenChuongTrinh;
			}
			set
			{
				if ((this._TenChuongTrinh != value))
				{
					this.OnTenChuongTrinhChanging(value);
					this.SendPropertyChanging();
					this._TenChuongTrinh = value;
					this.SendPropertyChanged("TenChuongTrinh");
					this.OnTenChuongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoBuoiHoc", DbType="NVarChar(50)")]
		public string SoBuoiHoc
		{
			get
			{
				return this._SoBuoiHoc;
			}
			set
			{
				if ((this._SoBuoiHoc != value))
				{
					this.OnSoBuoiHocChanging(value);
					this.SendPropertyChanging();
					this._SoBuoiHoc = value;
					this.SendPropertyChanged("SoBuoiHoc");
					this.OnSoBuoiHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiLuong", DbType="NVarChar(50)")]
		public string ThoiLuong
		{
			get
			{
				return this._ThoiLuong;
			}
			set
			{
				if ((this._ThoiLuong != value))
				{
					this.OnThoiLuongChanging(value);
					this.SendPropertyChanging();
					this._ThoiLuong = value;
					this.SendPropertyChanged("ThoiLuong");
					this.OnThoiLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Float")]
		public System.Nullable<double> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(50)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhHoc_DangKyHoc", Storage="_DangKyHocs", ThisKey="IDChuongTrinh", OtherKey="IDChuongTrinh")]
		public EntitySet<DangKyHoc> DangKyHocs
		{
			get
			{
				return this._DangKyHocs;
			}
			set
			{
				this._DangKyHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhHoc_LopHoc", Storage="_LopHocs", ThisKey="IDChuongTrinh", OtherKey="IDChuongTrinh")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyHocs(DangKyHoc entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhHoc = this;
		}
		
		private void detach_DangKyHocs(DangKyHoc entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhHoc = null;
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhHoc = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinhHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKyHoc")]
	public partial class DangKyHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDangKy;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private System.Nullable<int> _IDChuongTrinh;
		
		private string _GhiChu;
		
		private System.Nullable<int> _IDTaiKhoan;
		
		private EntityRef<ChuongTrinhHoc> _ChuongTrinhHoc;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDangKyChanging(int value);
    partial void OnIDDangKyChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIDChuongTrinhChanging(System.Nullable<int> value);
    partial void OnIDChuongTrinhChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnIDTaiKhoanChanging(System.Nullable<int> value);
    partial void OnIDTaiKhoanChanged();
    #endregion
		
		public DangKyHoc()
		{
			this._ChuongTrinhHoc = default(EntityRef<ChuongTrinhHoc>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDangKy", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDangKy
		{
			get
			{
				return this._IDDangKy;
			}
			set
			{
				if ((this._IDDangKy != value))
				{
					this.OnIDDangKyChanging(value);
					this.SendPropertyChanging();
					this._IDDangKy = value;
					this.SendPropertyChanged("IDDangKy");
					this.OnIDDangKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuongTrinh", DbType="Int")]
		public System.Nullable<int> IDChuongTrinh
		{
			get
			{
				return this._IDChuongTrinh;
			}
			set
			{
				if ((this._IDChuongTrinh != value))
				{
					if (this._ChuongTrinhHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChuongTrinhChanging(value);
					this.SendPropertyChanging();
					this._IDChuongTrinh = value;
					this.SendPropertyChanged("IDChuongTrinh");
					this.OnIDChuongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(MAX)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", DbType="Int")]
		public System.Nullable<int> IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhHoc_DangKyHoc", Storage="_ChuongTrinhHoc", ThisKey="IDChuongTrinh", OtherKey="IDChuongTrinh", IsForeignKey=true)]
		public ChuongTrinhHoc ChuongTrinhHoc
		{
			get
			{
				return this._ChuongTrinhHoc.Entity;
			}
			set
			{
				ChuongTrinhHoc previousValue = this._ChuongTrinhHoc.Entity;
				if (((previousValue != value) 
							|| (this._ChuongTrinhHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuongTrinhHoc.Entity = null;
						previousValue.DangKyHocs.Remove(this);
					}
					this._ChuongTrinhHoc.Entity = value;
					if ((value != null))
					{
						value.DangKyHocs.Add(this);
						this._IDChuongTrinh = value.IDChuongTrinh;
					}
					else
					{
						this._IDChuongTrinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuongTrinhHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DangKyHoc", Storage="_TaiKhoan", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DangKyHocs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DangKyHocs.Add(this);
						this._IDTaiKhoan = value.IDTaiKhoan;
					}
					else
					{
						this._IDTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGiangvien;
		
		private string _TenGiangVien;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _Hinh;
		
		private string _BangCap;
		
		private System.Nullable<double> _Luong;
		
		private System.Nullable<int> _IDTaiKhoan;
		
		private EntitySet<LopHoc> _LopHocs;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGiangvienChanging(int value);
    partial void OnIDGiangvienChanged();
    partial void OnTenGiangVienChanging(string value);
    partial void OnTenGiangVienChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    partial void OnBangCapChanging(string value);
    partial void OnBangCapChanged();
    partial void OnLuongChanging(System.Nullable<double> value);
    partial void OnLuongChanged();
    partial void OnIDTaiKhoanChanging(System.Nullable<int> value);
    partial void OnIDTaiKhoanChanged();
    #endregion
		
		public GiangVien()
		{
			this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiangvien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGiangvien
		{
			get
			{
				return this._IDGiangvien;
			}
			set
			{
				if ((this._IDGiangvien != value))
				{
					this.OnIDGiangvienChanging(value);
					this.SendPropertyChanging();
					this._IDGiangvien = value;
					this.SendPropertyChanged("IDGiangvien");
					this.OnIDGiangvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGiangVien", DbType="NVarChar(50)")]
		public string TenGiangVien
		{
			get
			{
				return this._TenGiangVien;
			}
			set
			{
				if ((this._TenGiangVien != value))
				{
					this.OnTenGiangVienChanging(value);
					this.SendPropertyChanging();
					this._TenGiangVien = value;
					this.SendPropertyChanged("TenGiangVien");
					this.OnTenGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(MAX)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="VarChar(MAX)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BangCap", DbType="NVarChar(MAX)")]
		public string BangCap
		{
			get
			{
				return this._BangCap;
			}
			set
			{
				if ((this._BangCap != value))
				{
					this.OnBangCapChanging(value);
					this.SendPropertyChanging();
					this._BangCap = value;
					this.SendPropertyChanged("BangCap");
					this.OnBangCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luong", DbType="Float")]
		public System.Nullable<double> Luong
		{
			get
			{
				return this._Luong;
			}
			set
			{
				if ((this._Luong != value))
				{
					this.OnLuongChanging(value);
					this.SendPropertyChanging();
					this._Luong = value;
					this.SendPropertyChanged("Luong");
					this.OnLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", DbType="Int")]
		public System.Nullable<int> IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHoc", Storage="_LopHocs", ThisKey="IDGiangvien", OtherKey="IDGiangVien")]
		public EntitySet<LopHoc> LopHocs
		{
			get
			{
				return this._LopHocs;
			}
			set
			{
				this._LopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GiangVien", Storage="_TaiKhoan", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.GiangViens.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.GiangViens.Add(this);
						this._IDTaiKhoan = value.IDTaiKhoan;
					}
					else
					{
						this._IDTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_LopHocs(LopHoc entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocVien")]
	public partial class HocVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHocvien;
		
		private string _TenHocVien;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _Hinh;
		
		private System.Nullable<int> _IDTrangThai;
		
		private string _CapDo;
		
		private System.Nullable<int> _IDTaiKhoan;
		
		private EntitySet<ChiTietLopHoc> _ChiTietLopHocs;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
		private EntityRef<TrangThaiHV> _TrangThaiHV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHocvienChanging(int value);
    partial void OnIDHocvienChanged();
    partial void OnTenHocVienChanging(string value);
    partial void OnTenHocVienChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    partial void OnIDTrangThaiChanging(System.Nullable<int> value);
    partial void OnIDTrangThaiChanged();
    partial void OnCapDoChanging(string value);
    partial void OnCapDoChanged();
    partial void OnIDTaiKhoanChanging(System.Nullable<int> value);
    partial void OnIDTaiKhoanChanged();
    #endregion
		
		public HocVien()
		{
			this._ChiTietLopHocs = new EntitySet<ChiTietLopHoc>(new Action<ChiTietLopHoc>(this.attach_ChiTietLopHocs), new Action<ChiTietLopHoc>(this.detach_ChiTietLopHocs));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			this._TrangThaiHV = default(EntityRef<TrangThaiHV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHocvien", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDHocvien
		{
			get
			{
				return this._IDHocvien;
			}
			set
			{
				if ((this._IDHocvien != value))
				{
					this.OnIDHocvienChanging(value);
					this.SendPropertyChanging();
					this._IDHocvien = value;
					this.SendPropertyChanged("IDHocvien");
					this.OnIDHocvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHocVien", DbType="NVarChar(50)")]
		public string TenHocVien
		{
			get
			{
				return this._TenHocVien;
			}
			set
			{
				if ((this._TenHocVien != value))
				{
					this.OnTenHocVienChanging(value);
					this.SendPropertyChanging();
					this._TenHocVien = value;
					this.SendPropertyChanged("TenHocVien");
					this.OnTenHocVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="NVarChar(MAX)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTrangThai", DbType="Int")]
		public System.Nullable<int> IDTrangThai
		{
			get
			{
				return this._IDTrangThai;
			}
			set
			{
				if ((this._IDTrangThai != value))
				{
					if (this._TrangThaiHV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._IDTrangThai = value;
					this.SendPropertyChanged("IDTrangThai");
					this.OnIDTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapDo", DbType="NVarChar(50)")]
		public string CapDo
		{
			get
			{
				return this._CapDo;
			}
			set
			{
				if ((this._CapDo != value))
				{
					this.OnCapDoChanging(value);
					this.SendPropertyChanging();
					this._CapDo = value;
					this.SendPropertyChanged("CapDo");
					this.OnCapDoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", DbType="Int")]
		public System.Nullable<int> IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocVien_ChiTietLopHoc", Storage="_ChiTietLopHocs", ThisKey="IDHocvien", OtherKey="IDHocVien")]
		public EntitySet<ChiTietLopHoc> ChiTietLopHocs
		{
			get
			{
				return this._ChiTietLopHocs;
			}
			set
			{
				this._ChiTietLopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocVien", Storage="_TaiKhoan", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HocViens.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HocViens.Add(this);
						this._IDTaiKhoan = value.IDTaiKhoan;
					}
					else
					{
						this._IDTaiKhoan = default(Nullable<int>);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiHV_HocVien", Storage="_TrangThaiHV", ThisKey="IDTrangThai", OtherKey="IDTrangThai", IsForeignKey=true)]
		public TrangThaiHV TrangThaiHV
		{
			get
			{
				return this._TrangThaiHV.Entity;
			}
			set
			{
				TrangThaiHV previousValue = this._TrangThaiHV.Entity;
				if (((previousValue != value) 
							|| (this._TrangThaiHV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrangThaiHV.Entity = null;
						previousValue.HocViens.Remove(this);
					}
					this._TrangThaiHV.Entity = value;
					if ((value != null))
					{
						value.HocViens.Add(this);
						this._IDTrangThai = value.IDTrangThai;
					}
					else
					{
						this._IDTrangThai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrangThaiHV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLopHocs(ChiTietLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocVien = this;
		}
		
		private void detach_ChiTietLopHocs(ChiTietLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.HocVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichHoc")]
	public partial class LichHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLichhoc;
		
		private string _TGBatDau;
		
		private string _TGKetThuc;
		
		private System.Nullable<int> _IDNgay;
		
		private EntitySet<ChiTietLichHoc> _ChiTietLichHocs;
		
		private EntityRef<CacNgayTrongTuan> _CacNgayTrongTuan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLichhocChanging(int value);
    partial void OnIDLichhocChanged();
    partial void OnTGBatDauChanging(string value);
    partial void OnTGBatDauChanged();
    partial void OnTGKetThucChanging(string value);
    partial void OnTGKetThucChanged();
    partial void OnIDNgayChanging(System.Nullable<int> value);
    partial void OnIDNgayChanged();
    #endregion
		
		public LichHoc()
		{
			this._ChiTietLichHocs = new EntitySet<ChiTietLichHoc>(new Action<ChiTietLichHoc>(this.attach_ChiTietLichHocs), new Action<ChiTietLichHoc>(this.detach_ChiTietLichHocs));
			this._CacNgayTrongTuan = default(EntityRef<CacNgayTrongTuan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLichhoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLichhoc
		{
			get
			{
				return this._IDLichhoc;
			}
			set
			{
				if ((this._IDLichhoc != value))
				{
					this.OnIDLichhocChanging(value);
					this.SendPropertyChanging();
					this._IDLichhoc = value;
					this.SendPropertyChanged("IDLichhoc");
					this.OnIDLichhocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGBatDau", DbType="NVarChar(50)")]
		public string TGBatDau
		{
			get
			{
				return this._TGBatDau;
			}
			set
			{
				if ((this._TGBatDau != value))
				{
					this.OnTGBatDauChanging(value);
					this.SendPropertyChanging();
					this._TGBatDau = value;
					this.SendPropertyChanged("TGBatDau");
					this.OnTGBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TGKetThuc", DbType="NVarChar(50)")]
		public string TGKetThuc
		{
			get
			{
				return this._TGKetThuc;
			}
			set
			{
				if ((this._TGKetThuc != value))
				{
					this.OnTGKetThucChanging(value);
					this.SendPropertyChanging();
					this._TGKetThuc = value;
					this.SendPropertyChanged("TGKetThuc");
					this.OnTGKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNgay", DbType="Int")]
		public System.Nullable<int> IDNgay
		{
			get
			{
				return this._IDNgay;
			}
			set
			{
				if ((this._IDNgay != value))
				{
					if (this._CacNgayTrongTuan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDNgayChanging(value);
					this.SendPropertyChanging();
					this._IDNgay = value;
					this.SendPropertyChanged("IDNgay");
					this.OnIDNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LichHoc_ChiTietLichHoc", Storage="_ChiTietLichHocs", ThisKey="IDLichhoc", OtherKey="IDLichhoc")]
		public EntitySet<ChiTietLichHoc> ChiTietLichHocs
		{
			get
			{
				return this._ChiTietLichHocs;
			}
			set
			{
				this._ChiTietLichHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CacNgayTrongTuan_LichHoc", Storage="_CacNgayTrongTuan", ThisKey="IDNgay", OtherKey="IDNgay", IsForeignKey=true)]
		public CacNgayTrongTuan CacNgayTrongTuan
		{
			get
			{
				return this._CacNgayTrongTuan.Entity;
			}
			set
			{
				CacNgayTrongTuan previousValue = this._CacNgayTrongTuan.Entity;
				if (((previousValue != value) 
							|| (this._CacNgayTrongTuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CacNgayTrongTuan.Entity = null;
						previousValue.LichHocs.Remove(this);
					}
					this._CacNgayTrongTuan.Entity = value;
					if ((value != null))
					{
						value.LichHocs.Add(this);
						this._IDNgay = value.IDNgay;
					}
					else
					{
						this._IDNgay = default(Nullable<int>);
					}
					this.SendPropertyChanged("CacNgayTrongTuan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLichHocs(ChiTietLichHoc entity)
		{
			this.SendPropertyChanging();
			entity.LichHoc = this;
		}
		
		private void detach_ChiTietLichHocs(ChiTietLichHoc entity)
		{
			this.SendPropertyChanging();
			entity.LichHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLophoc;
		
		private string _TenLopHoc;
		
		private System.Nullable<int> _IDGiangVien;
		
		private System.Nullable<int> _IDChuongTrinh;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<ChiTietLichHoc> _ChiTietLichHocs;
		
		private EntitySet<ChiTietLopHoc> _ChiTietLopHocs;
		
		private EntityRef<ChuongTrinhHoc> _ChuongTrinhHoc;
		
		private EntityRef<GiangVien> _GiangVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLophocChanging(int value);
    partial void OnIDLophocChanged();
    partial void OnTenLopHocChanging(string value);
    partial void OnTenLopHocChanged();
    partial void OnIDGiangVienChanging(System.Nullable<int> value);
    partial void OnIDGiangVienChanged();
    partial void OnIDChuongTrinhChanging(System.Nullable<int> value);
    partial void OnIDChuongTrinhChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public LopHoc()
		{
			this._ChiTietLichHocs = new EntitySet<ChiTietLichHoc>(new Action<ChiTietLichHoc>(this.attach_ChiTietLichHocs), new Action<ChiTietLichHoc>(this.detach_ChiTietLichHocs));
			this._ChiTietLopHocs = new EntitySet<ChiTietLopHoc>(new Action<ChiTietLopHoc>(this.attach_ChiTietLopHocs), new Action<ChiTietLopHoc>(this.detach_ChiTietLopHocs));
			this._ChuongTrinhHoc = default(EntityRef<ChuongTrinhHoc>);
			this._GiangVien = default(EntityRef<GiangVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLophoc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLophoc
		{
			get
			{
				return this._IDLophoc;
			}
			set
			{
				if ((this._IDLophoc != value))
				{
					this.OnIDLophocChanging(value);
					this.SendPropertyChanging();
					this._IDLophoc = value;
					this.SendPropertyChanged("IDLophoc");
					this.OnIDLophocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLopHoc", DbType="NVarChar(50)")]
		public string TenLopHoc
		{
			get
			{
				return this._TenLopHoc;
			}
			set
			{
				if ((this._TenLopHoc != value))
				{
					this.OnTenLopHocChanging(value);
					this.SendPropertyChanging();
					this._TenLopHoc = value;
					this.SendPropertyChanged("TenLopHoc");
					this.OnTenLopHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGiangVien", DbType="Int")]
		public System.Nullable<int> IDGiangVien
		{
			get
			{
				return this._IDGiangVien;
			}
			set
			{
				if ((this._IDGiangVien != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGiangVienChanging(value);
					this.SendPropertyChanging();
					this._IDGiangVien = value;
					this.SendPropertyChanged("IDGiangVien");
					this.OnIDGiangVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDChuongTrinh", DbType="Int")]
		public System.Nullable<int> IDChuongTrinh
		{
			get
			{
				return this._IDChuongTrinh;
			}
			set
			{
				if ((this._IDChuongTrinh != value))
				{
					if (this._ChuongTrinhHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChuongTrinhChanging(value);
					this.SendPropertyChanging();
					this._IDChuongTrinh = value;
					this.SendPropertyChanged("IDChuongTrinh");
					this.OnIDChuongTrinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_ChiTietLichHoc", Storage="_ChiTietLichHocs", ThisKey="IDLophoc", OtherKey="IDLophoc")]
		public EntitySet<ChiTietLichHoc> ChiTietLichHocs
		{
			get
			{
				return this._ChiTietLichHocs;
			}
			set
			{
				this._ChiTietLichHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_ChiTietLopHoc", Storage="_ChiTietLopHocs", ThisKey="IDLophoc", OtherKey="IDLophoc")]
		public EntitySet<ChiTietLopHoc> ChiTietLopHocs
		{
			get
			{
				return this._ChiTietLopHocs;
			}
			set
			{
				this._ChiTietLopHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinhHoc_LopHoc", Storage="_ChuongTrinhHoc", ThisKey="IDChuongTrinh", OtherKey="IDChuongTrinh", IsForeignKey=true)]
		public ChuongTrinhHoc ChuongTrinhHoc
		{
			get
			{
				return this._ChuongTrinhHoc.Entity;
			}
			set
			{
				ChuongTrinhHoc previousValue = this._ChuongTrinhHoc.Entity;
				if (((previousValue != value) 
							|| (this._ChuongTrinhHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuongTrinhHoc.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._ChuongTrinhHoc.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._IDChuongTrinh = value.IDChuongTrinh;
					}
					else
					{
						this._IDChuongTrinh = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuongTrinhHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_LopHoc", Storage="_GiangVien", ThisKey="IDGiangVien", OtherKey="IDGiangvien", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.LopHocs.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.LopHocs.Add(this);
						this._IDGiangVien = value.IDGiangvien;
					}
					else
					{
						this._IDGiangVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietLichHocs(ChiTietLichHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_ChiTietLichHocs(ChiTietLichHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
		
		private void attach_ChiTietLopHocs(ChiTietLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_ChiTietLopHocs(ChiTietLopHoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTaiKhoan;
		
		private string _TaiKhoan1;
		
		private string _MatKhau;
		
		private EntitySet<DangKyHoc> _DangKyHocs;
		
		private EntitySet<GiangVien> _GiangViens;
		
		private EntitySet<HocVien> _HocViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTaiKhoanChanging(int value);
    partial void OnIDTaiKhoanChanged();
    partial void OnTaiKhoan1Changing(string value);
    partial void OnTaiKhoan1Changed();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._DangKyHocs = new EntitySet<DangKyHoc>(new Action<DangKyHoc>(this.attach_DangKyHocs), new Action<DangKyHoc>(this.detach_DangKyHocs));
			this._GiangViens = new EntitySet<GiangVien>(new Action<GiangVien>(this.attach_GiangViens), new Action<GiangVien>(this.detach_GiangViens));
			this._HocViens = new EntitySet<HocVien>(new Action<HocVien>(this.attach_HocViens), new Action<HocVien>(this.detach_HocViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TaiKhoan", Storage="_TaiKhoan1", DbType="VarChar(50)")]
		public string TaiKhoan1
		{
			get
			{
				return this._TaiKhoan1;
			}
			set
			{
				if ((this._TaiKhoan1 != value))
				{
					this.OnTaiKhoan1Changing(value);
					this.SendPropertyChanging();
					this._TaiKhoan1 = value;
					this.SendPropertyChanged("TaiKhoan1");
					this.OnTaiKhoan1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DangKyHoc", Storage="_DangKyHocs", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan")]
		public EntitySet<DangKyHoc> DangKyHocs
		{
			get
			{
				return this._DangKyHocs;
			}
			set
			{
				this._DangKyHocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_GiangVien", Storage="_GiangViens", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan")]
		public EntitySet<GiangVien> GiangViens
		{
			get
			{
				return this._GiangViens;
			}
			set
			{
				this._GiangViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HocVien", Storage="_HocViens", ThisKey="IDTaiKhoan", OtherKey="IDTaiKhoan")]
		public EntitySet<HocVien> HocViens
		{
			get
			{
				return this._HocViens;
			}
			set
			{
				this._HocViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyHocs(DangKyHoc entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DangKyHocs(DangKyHoc entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_HocViens(HocVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_HocViens(HocVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrangThaiHV")]
	public partial class TrangThaiHV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTrangThai;
		
		private string _TenTrangThai;
		
		private EntitySet<HocVien> _HocViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTrangThaiChanging(int value);
    partial void OnIDTrangThaiChanged();
    partial void OnTenTrangThaiChanging(string value);
    partial void OnTenTrangThaiChanged();
    #endregion
		
		public TrangThaiHV()
		{
			this._HocViens = new EntitySet<HocVien>(new Action<HocVien>(this.attach_HocViens), new Action<HocVien>(this.detach_HocViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTrangThai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDTrangThai
		{
			get
			{
				return this._IDTrangThai;
			}
			set
			{
				if ((this._IDTrangThai != value))
				{
					this.OnIDTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._IDTrangThai = value;
					this.SendPropertyChanged("IDTrangThai");
					this.OnIDTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTrangThai", DbType="NVarChar(50)")]
		public string TenTrangThai
		{
			get
			{
				return this._TenTrangThai;
			}
			set
			{
				if ((this._TenTrangThai != value))
				{
					this.OnTenTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TenTrangThai = value;
					this.SendPropertyChanged("TenTrangThai");
					this.OnTenTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrangThaiHV_HocVien", Storage="_HocViens", ThisKey="IDTrangThai", OtherKey="IDTrangThai")]
		public EntitySet<HocVien> HocViens
		{
			get
			{
				return this._HocViens;
			}
			set
			{
				this._HocViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HocViens(HocVien entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiHV = this;
		}
		
		private void detach_HocViens(HocVien entity)
		{
			this.SendPropertyChanging();
			entity.TrangThaiHV = null;
		}
	}
}
#pragma warning restore 1591
