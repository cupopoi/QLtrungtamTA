@model TrungTamTA.Models.HocVien
@{
    ViewBag.Title = "Suahocvien";
    Layout = "~/Views/Shared/_layoutAD.cshtml";
}
<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Thay đổi thông tin học viên</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("HomeQL", "Home", null, Request.Url.Scheme)">Home</a></li>
                    <li class="breadcrumb-item active">Thay đổi thông tin học viên</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IDHocvien)

        <div class="form-group">
            @Html.LabelFor(model => model.IDHocvien, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.IDHocvien)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Hinh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <img src="@Model.Hinh" alt="Hình ảnh" width="100" height="100" />
                @*<input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                           style="display:none;" />
                    <input type="button" id="btnUpload" value="Chọn" class="btn btn-success" />*@

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TenHocVien, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenHocVien, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenHocVien, "", new { @class = "text-danger" })
            </div>
        </div>
       *<div class="form-group">
                @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
                <h5 style="color:darkgray; font-size:15px;">*Lưu ý (Month/Day/Year)</h5>
                <div class="col-md-10">
                    @{
                        var ngaySinhFormatted = Model.NgaySinh?.ToString("MM/dd/yyyy");
                    }
                    @Html.EditorFor(model => model.NgaySinh, "dd/MM/yyyy", new { @class = "form-control", @Value = ngaySinhFormatted })
                    @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                </div>
            </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SoDienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SoDienThoai, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoDienThoai, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CapDo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-12">
                @Html.EditorFor(model => model.CapDo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CapDo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IDTrangThai, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IDTrangThai, ViewBag.IDTrangThai as SelectList, "-- Chọn trạng thái --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDTrangThai, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section upload
{
    <script>
        $(function () {
            $('#btnUpload').click(function () {
                $('#fileUpload').trigger('click');
            });
        });
        $('#fileUpload').change(function () {
            if (window.FormData !== undefined) {
                var fileUpload = $('#fileUpload').get(0);
                var files = fileUpload.files;
                var formData = new FormData();
                formData.append('file', files[0]);

                $.ajax(
                    {
                        type: 'POST',
                        url: '/QLHocvien/ProcessUpload',
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (urlImage) {

                            $('#pictureUpload').attr('src', urlImage);
                            $('#Hinh').val(urlImage);
                        },
                        error: function (err) {
                            alert('Error ', err.statusText);
                        }
                    });
            }
        });


        $(function () {
            $("#NgaySinh").datepicker({
                dateFormat: "dd/mm/yy",
                altField: "#NgaySinh",
                altFormat: "yy-mm-dd"
            });
        });

        $("form").on("submit", function () {
            var ngaySinhValue = $("#NgaySinh").val();
            var ngaySinhFormatted = $.datepicker.formatDate("dd/mm/yy", $.datepicker.parseDate("yy-mm-dd", ngaySinhValue));
            $("#NgaySinh").val(ngaySinhFormatted);
        });
    </script>
}

